{
    "scope": "source.js",
    "version": "0.10",
    "completions": [
        {
            "trigger": "host()->UIAHost",
            "contents": "host()"
        },
        {
            "trigger": "localTarget()->UIATarget",
            "contents": "localTarget()"
        },
        {
            "trigger": "deactivateApp(duration Number)->Boolean",
            "contents": "deactivateApp(${1:duration Number}$0)"
        },
        {
            "trigger": "frontMostApp()->UIAApplication",
            "contents": "frontMostApp()"
        },
        {
            "trigger": "model()->String",
            "contents": "model()"
        },
        {
            "trigger": "name()->String",
            "contents": "name()"
        },
        {
            "trigger": "rect()->Rect",
            "contents": "rect()"
        },
        {
            "trigger": "systemName()->String",
            "contents": "systemName()"
        },
        {
            "trigger": "systemVersion()->String",
            "contents": "systemVersion()"
        },
        {
            "trigger": "deviceOrientation()->deviceOrientation Number",
            "contents": "deviceOrientation()"
        },
        {
            "trigger": "setDeviceOrientation(deviceOrientation Number)",
            "contents": "setDeviceOrientation(${1:deviceOrientation Number}$0)"
        },
        {
            "trigger": "setLocation(coordinates)->boolean",
            "contents": "setLocation(${1:coordinates}$0)"
        },
        {
            "trigger": "setLocationWithOptions(coordinates, options)->boolean",
            "contents": "setLocationWithOptions(${1:coordinates},${2: options}$0)"
        },
        {
            "trigger": "clickVolumeDown()",
            "contents": "clickVolumeDown()"
        },
        {
            "trigger": "clickVolumeUp()",
            "contents": "clickVolumeUp()"
        },
        {
            "trigger": "holdVolumeDown(duration Number)",
            "contents": "holdVolumeDown(${1:duration Number}$0)"
        },
        {
            "trigger": "holdVolumeUp(duration Number)",
            "contents": "holdVolumeUp(${1:duration Number}$0)"
        },
        {
            "trigger": "lockForDuration(duration Number)",
            "contents": "lockForDuration(${1:duration Number}$0)"
        },
        {
            "trigger": "lock()",
            "contents": "lock()"
        },
        {
            "trigger": "shake()",
            "contents": "shake()"
        },
        {
            "trigger": "unlock()",
            "contents": "unlock()"
        },
        {
            "trigger": "dragFromToForDuration(fromPointObject, toPointObject, duration Number)",
            "contents": "dragFromToForDuration(${1:fromPointObject},${2: toPointObject},${3: duration Number}$0)"
        },
        {
            "trigger": "doubleTap(Object tapPointObject)",
            "contents": "doubleTap(${1:Object tapPointObject}$0)"
        },
        {
            "trigger": "flickFromTo(fromPointObject, toPointObject)",
            "contents": "flickFromTo(${1:fromPointObject},${2: toPointObject}$0)"
        },
        {
            "trigger": "pinchCloseFromToForDuration(fromPointObject, toPointObject, duration Number)",
            "contents": "pinchCloseFromToForDuration(${1:fromPointObject},${2: toPointObject},${3: duration Number}$0)"
        },
        {
            "trigger": "pinchOpenFromToForDuration(fromPointObject, toPointObject, duration Number)",
            "contents": "pinchOpenFromToForDuration(${1:fromPointObject},${2: toPointObject},${3: duration Number}$0)"
        },
        {
            "trigger": "rotateWithOptions(Object location, options Object)",
            "contents": "rotateWithOptions(${1:Object location},${2: options Object}$0)"
        },
        {
            "trigger": "tap(Object tapPointObject)",
            "contents": "tap(${1:Object tapPointObject}$0)"
        },
        {
            "trigger": "tapWithOptions(Object tapPointObject, options Object)",
            "contents": "tapWithOptions(${1:Object tapPointObject},${2: options Object}$0)"
        },
        {
            "trigger": "touchAndHold(Object tapPointObject, duration Number)",
            "contents": "touchAndHold(${1:Object tapPointObject},${2: duration Number}$0)"
        },
        {
            "trigger": "captureRectWithName(Rect rect, imageName String)",
            "contents": "captureRectWithName(${1:Rect rect},${2: imageName String}$0)"
        },
        {
            "trigger": "captureScreenWithName(imageName String)",
            "contents": "captureScreenWithName(${1:imageName String}$0)"
        },
        {
            "trigger": "popTimeout()->Number",
            "contents": "popTimeout()"
        },
        {
            "trigger": "pushTimeout(timeoutValue)",
            "contents": "pushTimeout(${1:timeoutValue}$0)"
        },
        {
            "trigger": "setTimeout(timeout Number)",
            "contents": "setTimeout(${1:timeout Number}$0)"
        },
        {
            "trigger": "timeout()->Number",
            "contents": "timeout()"
        },
        {
            "trigger": "delay(Number timeInterval)->Boolean",
            "contents": "delay(${1:Number timeInterval}$0)"
        },
        {
            "trigger": "onAlert(UIAAlert alert)->Boolean",
            "contents": "onAlert(${1:UIAAlert alert}$0)"
        },
        {
            "trigger": "UIA_DEVICE_ORIENTATION_UNKNOWN",
            "contents": "UIA_DEVICE_ORIENTATION_UNKNOWN"
        },
        {
            "trigger": "UIA_DEVICE_ORIENTATION_PORTRAIT",
            "contents": "UIA_DEVICE_ORIENTATION_PORTRAIT"
        },
        {
            "trigger": "UIA_DEVICE_ORIENTATION_PORTRAIT_UPSIDEDOWN",
            "contents": "UIA_DEVICE_ORIENTATION_PORTRAIT_UPSIDEDOWN"
        },
        {
            "trigger": "UIA_DEVICE_ORIENTATION_LANDSCAPELEFT",
            "contents": "UIA_DEVICE_ORIENTATION_LANDSCAPELEFT"
        },
        {
            "trigger": "UIA_DEVICE_ORIENTATION_LANDSCAPERIGHT",
            "contents": "UIA_DEVICE_ORIENTATION_LANDSCAPERIGHT"
        },
        {
            "trigger": "UIA_DEVICE_ORIENTATION_FACEUP",
            "contents": "UIA_DEVICE_ORIENTATION_FACEUP"
        },
        {
            "trigger": "UIA_DEVICE_ORIENTATION_FACEDOWN",
            "contents": "UIA_DEVICE_ORIENTATION_FACEDOWN"
        }
    ]
}
