{
    "scope": "source.js",
    "version": "0.10",
    "completions": [
        {
            "trigger": "status()",
            "contents": "status()"
        }, {
            "trigger": "init(desired)",
            "contents": "init(${1:desired}$0)"
        }, {
            "trigger": "sessions()",
            "contents": "sessions()"
        }, {
            "trigger": "altSessionCapabilities()",
            "contents": "altSessionCapabilities()"
        }, {
            "trigger": "sessionCapabilities()",
            "contents": "sessionCapabilities()"
        }, {
            "trigger": "quit()",
            "contents": "quit()"
        }, {
            "trigger": "setPageLoadTimeout(ms)",
            "contents": "setPageLoadTimeout(${1:ms}$0)"
        }, {
            "trigger": "setCommandTimeout(ms)",
            "contents": "setCommandTimeout(${1:ms}$0)"
        }, {
            "trigger": "setAsyncScriptTimeout(ms)",
            "contents": "setAsyncScriptTimeout(${1:ms}$0)"
        }, {
            "trigger": "setImplicitWaitTimeout(ms)",
            "contents": "setImplicitWaitTimeout(${1:ms}$0)"
        }, {
            "trigger": "windowHandle()",
            "contents": "windowHandle()"
        }, {
            "trigger": "windowHandles()",
            "contents": "windowHandles()"
        }, {
            "trigger": "url()",
            "contents": "url()"
        }, {
            "trigger": "get(url)",
            "contents": "get(${1:url}$0)"
        }, {
            "trigger": "forward()",
            "contents": "forward()"
        }, {
            "trigger": "back()",
            "contents": "back()"
        }, {
            "trigger": "refresh()",
            "contents": "refresh()"
        }, {
            "trigger": "execute(code,args)",
            "contents": "execute(${1:code},${2:args}$0)"
        }, {
            "trigger": "execute(code)",
            "contents": "execute(${1:code}$0)"
        }, {
            "trigger": "safeExecute(code,args)",
            "contents": "safeExecute(${1:code},${2:args}$0)"
        }, {
            "trigger": "safeExecute(code)",
            "contents": "safeExecute(${1:code}$0)"
        }, {
            "trigger": "eval(code)",
            "contents": "eval(${1:code}$0)"
        }, {
            "trigger": "safeEval(code)",
            "contents": "safeEval(${1:code}$0)"
        }, {
            "trigger": "executeAsync(code,args)",
            "contents": "executeAsync(${1:code},${2:args}$0)"
        }, {
            "trigger": "executeAsync(code)",
            "contents": "executeAsync(${1:code}$0)"
        }, {
            "trigger": "safeExecuteAsync(code,args)",
            "contents": "safeExecuteAsync(${1:code},${2:args}$0)"
        }, {
            "trigger": "safeExecuteAsync(code)",
            "contents": "safeExecuteAsync(${1:code}$0)"
        }, {
            "trigger": "takeScreenshot()",
            "contents": "takeScreenshot()"
        }, {
            "trigger": "availableIMEEngines()",
            "contents": "availableIMEEngines()"
        }, {
            "trigger": "activeIMEEngine()",
            "contents": "activeIMEEngine()"
        }, {
            "trigger": "activatedIMEEngine()",
            "contents": "activatedIMEEngine()"
        }, {
            "trigger": "deactivateIMEEngine()",
            "contents": "deactivateIMEEngine()"
        }, {
            "trigger": "activateIMEEngine(,engine)",
            "contents": "activateIMEEngine(,engine)"
        }, {
            "trigger": "frame(frameRef)",
            "contents": "frame(${1:frameRef}$0)"
        }, {
            "trigger": "window(name)",
            "contents": "window(${1:name}$0)"
        }, {
            "trigger": "close()",
            "contents": "close()"
        }, {
            "trigger": "windowSize(handle,width,height)",
            "contents": "windowSize(${1:handle},${2:width},${3:height}$0)"
        }, {
            "trigger": "setWindowSize(width,height,handle)",
            "contents": "setWindowSize(${1:width},${2:height},${3:handle}$0)"
        }, {
            "trigger": "setWindowSize(width,height)",
            "contents": "setWindowSize(${1:width},${2:height}$0)"
        }, {
            "trigger": "getWindowSize(handle)",
            "contents": "getWindowSize(${1:handle}$0)"
        }, {
            "trigger": "getWindowSize()",
            "contents": "getWindowSize()"
        }, {
            "trigger": "setWindowPosition(x,y,handle)",
            "contents": "setWindowPosition(${1:x},${2:y},${3:handle}$0)"
        }, {
            "trigger": "setWindowPosition(x,y)",
            "contents": "setWindowPosition(${1:x},${2:y}$0)"
        }, {
            "trigger": "getWindowPosition(handle)",
            "contents": "getWindowPosition(${1:handle}$0)"
        }, {
            "trigger": "getWindowPosition()",
            "contents": "getWindowPosition()"
        }, {
            "trigger": "maximize(handle)",
            "contents": "maximize(${1:handle}$0)"
        }, {
            "trigger": "allCookies()",
            "contents": "allCookies()"
        }, {
            "trigger": "setCookie(cookie)",
            "contents": "setCookie(${1:cookie}$0)"
        }, {
            "trigger": "deleteAllCookies()",
            "contents": "deleteAllCookies()"
        }, {
            "trigger": "deleteCookie(name)",
            "contents": "deleteCookie(${1:name}$0)"
        }, {
            "trigger": "source()",
            "contents": "source()"
        }, {
            "trigger": "title()",
            "contents": "title()"
        }, {
            "trigger": "element(using,value)",
            "contents": "element(${1:using},${2:value}$0)"
        }, {
            "trigger": "elementByClassName(value)",
            "contents": "elementByClassName(${1:value}$0)"
        }, {
            "trigger": "elementByCssSelector(value)",
            "contents": "elementByCssSelector(${1:value}$0)"
        }, {
            "trigger": "elementById(value)",
            "contents": "elementById(${1:value}$0)"
        }, {
            "trigger": "elementByName(value)",
            "contents": "elementByName(${1:value}$0)"
        }, {
            "trigger": "elementByLinkText(value)",
            "contents": "elementByLinkText(${1:value}$0)"
        }, {
            "trigger": "elementByPartialLinkText(value)",
            "contents": "elementByPartialLinkText(${1:value}$0)"
        }, {
            "trigger": "elementByTagName(value)",
            "contents": "elementByTagName(${1:value}$0)"
        }, {
            "trigger": "elementByXPath(value)",
            "contents": "elementByXPath(${1:value}$0)"
        }, {
            "trigger": "elementByCss(value)",
            "contents": "elementByCss(${1:value}$0)"
        }, {
            "trigger": "elementByIosUIAutomation(value)",
            "contents": "elementByIosUIAutomation(${1:value}$0)"
        }, {
            "trigger": "elementByAndroidUIAutomator(value)",
            "contents": "elementByAndroidUIAutomator(${1:value}$0)"
        }, {
            "trigger": "elementByAccessibilityId(value)",
            "contents": "elementByAccessibilityId(${1:value}$0)"
        }, {
            "trigger": "elements(using,value)",
            "contents": "elements(${1:using},${2:value}$0)"
        }, {
            "trigger": "elementsByClassName(value)",
            "contents": "elementsByClassName(${1:value}$0)"
        }, {
            "trigger": "elementsByCssSelector(value)",
            "contents": "elementsByCssSelector(${1:value}$0)"
        }, {
            "trigger": "elementsById(value)",
            "contents": "elementsById(${1:value}$0)"
        }, {
            "trigger": "elementsByName(value)",
            "contents": "elementsByName(${1:value}$0)"
        }, {
            "trigger": "elementsByLinkText(value)",
            "contents": "elementsByLinkText(${1:value}$0)"
        }, {
            "trigger": "elementsByPartialLinkText(value)",
            "contents": "elementsByPartialLinkText(${1:value}$0)"
        }, {
            "trigger": "elementsByTagName(value)",
            "contents": "elementsByTagName(${1:value}$0)"
        }, {
            "trigger": "elementsByXPath(value)",
            "contents": "elementsByXPath(${1:value}$0)"
        }, {
            "trigger": "elementsByCss(value)",
            "contents": "elementsByCss(${1:value}$0)"
        }, {
            "trigger": "elementsByIosUIAutomation(value)",
            "contents": "elementsByIosUIAutomation(${1:value}$0)"
        }, {
            "trigger": "elementsByAndroidUIAutomator(value)",
            "contents": "elementsByAndroidUIAutomator(${1:value}$0)"
        }, {
            "trigger": "elementsByAccessibilityId(value)",
            "contents": "elementsByAccessibilityId(${1:value}$0)"
        }, {
            "trigger": "elementOrNull(using,value)",
            "contents": "elementOrNull(${1:using},${2:value}$0)"
        }, {
            "trigger": "elementByClassNameOrNull(value)",
            "contents": "elementByClassNameOrNull(${1:value}$0)"
        }, {
            "trigger": "elementByCssSelectorOrNull(value)",
            "contents": "elementByCssSelectorOrNull(${1:value}$0)"
        }, {
            "trigger": "elementByIdOrNull(value)",
            "contents": "elementByIdOrNull(${1:value}$0)"
        }, {
            "trigger": "elementByNameOrNull(value)",
            "contents": "elementByNameOrNull(${1:value}$0)"
        }, {
            "trigger": "elementByLinkTextOrNull(value)",
            "contents": "elementByLinkTextOrNull(${1:value}$0)"
        }, {
            "trigger": "elementByPartialLinkTextOrNull(value)",
            "contents": "elementByPartialLinkTextOrNull(${1:value}$0)"
        }, {
            "trigger": "elementByTagNameOrNull(value)",
            "contents": "elementByTagNameOrNull(${1:value}$0)"
        }, {
            "trigger": "elementByXPathOrNull(value)",
            "contents": "elementByXPathOrNull(${1:value}$0)"
        }, {
            "trigger": "elementByCssOrNull(value)",
            "contents": "elementByCssOrNull(${1:value}$0)"
        }, {
            "trigger": "elementByIosUIAutomationOrNull(value)",
            "contents": "elementByIosUIAutomationOrNull(${1:value}$0)"
        }, {
            "trigger": "elementByAndroidUIAutomatorOrNull(value)",
            "contents": "elementByAndroidUIAutomatorOrNull(${1:value}$0)"
        }, {
            "trigger": "elementByAccessibilityIdOrNull(value)",
            "contents": "elementByAccessibilityIdOrNull(${1:value}$0)"
        }, {
            "trigger": "elementIfExists(using,value)",
            "contents": "elementIfExists(${1:using},${2:value}$0)"
        }, {
            "trigger": "elementByClassNameIfExists(value)",
            "contents": "elementByClassNameIfExists(${1:value}$0)"
        }, {
            "trigger": "elementByCssSelectorIfExists(value)",
            "contents": "elementByCssSelectorIfExists(${1:value}$0)"
        }, {
            "trigger": "elementByIdIfExists(value)",
            "contents": "elementByIdIfExists(${1:value}$0)"
        }, {
            "trigger": "elementByNameIfExists(value)",
            "contents": "elementByNameIfExists(${1:value}$0)"
        }, {
            "trigger": "elementByLinkTextIfExists(value)",
            "contents": "elementByLinkTextIfExists(${1:value}$0)"
        }, {
            "trigger": "elementByPartialLinkTextIfExists(value)",
            "contents": "elementByPartialLinkTextIfExists(${1:value}$0)"
        }, {
            "trigger": "elementByTagNameIfExists(value)",
            "contents": "elementByTagNameIfExists(${1:value}$0)"
        }, {
            "trigger": "elementByXPathIfExists(value)",
            "contents": "elementByXPathIfExists(${1:value}$0)"
        }, {
            "trigger": "elementByCssIfExists(value)",
            "contents": "elementByCssIfExists(${1:value}$0)"
        }, {
            "trigger": "elementByIosUIAutomationIfExists(value)",
            "contents": "elementByIosUIAutomationIfExists(${1:value}$0)"
        }, {
            "trigger": "elementByAndroidUIAutomatorIfExists(value)",
            "contents": "elementByAndroidUIAutomatorIfExists(${1:value}$0)"
        }, {
            "trigger": "elementByAccessibilityIdIfExists(value)",
            "contents": "elementByAccessibilityIdIfExists(${1:value}$0)"
        }, {
            "trigger": "hasElement(using,value)",
            "contents": "hasElement(${1:using},${2:value}$0)"
        }, {
            "trigger": "hasElementByClassName(value)",
            "contents": "hasElementByClassName(${1:value}$0)"
        }, {
            "trigger": "hasElementByCssSelector(value)",
            "contents": "hasElementByCssSelector(${1:value}$0)"
        }, {
            "trigger": "hasElementById(value)",
            "contents": "hasElementById(${1:value}$0)"
        }, {
            "trigger": "hasElementByName(value)",
            "contents": "hasElementByName(${1:value}$0)"
        }, {
            "trigger": "hasElementByLinkText(value)",
            "contents": "hasElementByLinkText(${1:value}$0)"
        }, {
            "trigger": "hasElementByPartialLinkText(value)",
            "contents": "hasElementByPartialLinkText(${1:value}$0)"
        }, {
            "trigger": "hasElementByTagName(value)",
            "contents": "hasElementByTagName(${1:value}$0)"
        }, {
            "trigger": "hasElementByXPath(value)",
            "contents": "hasElementByXPath(${1:value}$0)"
        }, {
            "trigger": "hasElementByCss(value)",
            "contents": "hasElementByCss(${1:value}$0)"
        }, {
            "trigger": "hasElementByIosUIAutomation(value)",
            "contents": "hasElementByIosUIAutomation(${1:value}$0)"
        }, {
            "trigger": "hasElementByAndroidUIAutomator(value)",
            "contents": "hasElementByAndroidUIAutomator(${1:value}$0)"
        }, {
            "trigger": "hasElementByAccessibilityId(value)",
            "contents": "hasElementByAccessibilityId(${1:value}$0)"
        }, {
            "trigger": "active()",
            "contents": "active()"
        }, {
            "trigger": "elementsByIosUIAUtomation(value)",
            "contents": "elementsByIosUIAUtomation(${1:value}$0)"
        }, {
            "trigger": "clickElement(element)",
            "contents": "clickElement(${1:element}$0)"
        }, {
            "trigger": "click()",
            "contents": "click()"
        }, {
            "trigger": "submit(element)",
            "contents": "submit(${1:element}$0)"
        }, {
            "trigger": "submit()",
            "contents": "submit()"
        }, {
            "trigger": "text(element)",
            "contents": "text(${1:element}$0)"
        }, {
            "trigger": "text()",
            "contents": "text()"
        }, {
            "trigger": "textPresent(searchText,element)",
            "contents": "textPresent(${1:searchText},${2:element}$0)"
        }, {
            "trigger": "textPresent(searchText)",
            "contents": "textPresent(${1:searchText}$0)"
        }, {
            "trigger": "type(element,keys)",
            "contents": "type(${1:element},${2:keys}$0)"
        }, {
            "trigger": "type(keys)",
            "contents": "type(${1:keys}$0)"
        }, {
            "trigger": "keys(keys)",
            "contents": "keys(${1:keys}$0)"
        }, {
            "trigger": "getTagName(element)",
            "contents": "getTagName(${1:element}$0)"
        }, {
            "trigger": "getTagName()",
            "contents": "getTagName()"
        }, {
            "trigger": "clear(element)",
            "contents": "clear(${1:element}$0)"
        }, {
            "trigger": "clear()",
            "contents": "clear()"
        }, {
            "trigger": "isSelected(element)",
            "contents": "isSelected(${1:element}$0)"
        }, {
            "trigger": "isSelected()",
            "contents": "isSelected()"
        }, {
            "trigger": "isEnabled(element)",
            "contents": "isEnabled(${1:element}$0)"
        }, {
            "trigger": "isEnabled()",
            "contents": "isEnabled()"
        }, {
            "trigger": "getAttribute(element,attrName)",
            "contents": "getAttribute(${1:element},${2:attrName}$0)"
        }, {
            "trigger": "getAttribute(attrName)",
            "contents": "getAttribute(${1:attrName}$0)"
        }, {
            "trigger": "getValue(element)",
            "contents": "getValue(${1:element}$0)"
        }, {
            "trigger": "getValue()",
            "contents": "getValue()"
        }, {
            "trigger": "equals(other)",
            "contents": "equals(${1:other}$0)"
        }, {
            "trigger": "equalsElement(element,other)",
            "contents": "equalsElement(${1:element},${2:other}$0)"
        }, {
            "trigger": "isDisplayed(element)",
            "contents": "isDisplayed(${1:element}$0)"
        }, {
            "trigger": "isDisplayed()",
            "contents": "isDisplayed()"
        }, {
            "trigger": "getLocation(element)",
            "contents": "getLocation(${1:element}$0)"
        }, {
            "trigger": "getLocation()",
            "contents": "getLocation()"
        }, {
            "trigger": "getLocationInView()",
            "contents": "getLocationInView()"
        }, {
            "trigger": "getLocationInView(element)",
            "contents": "getLocationInView(${1:element}$0)"
        }, {
            "trigger": "getSize(element)",
            "contents": "getSize(${1:element}$0)"
        }, {
            "trigger": "getSize()",
            "contents": "getSize()"
        }, {
            "trigger": "getComputedCss(element,cssProperty)",
            "contents": "getComputedCss(${1:element},${2:cssProperty}$0)"
        }, {
            "trigger": "getComputedCss(cssProperty)",
            "contents": "getComputedCss(${1:cssProperty}$0)"
        }, {
            "trigger": "getOrientation()",
            "contents": "getOrientation()"
        }, {
            "trigger": "setOrientation()",
            "contents": "setOrientation()"
        }, {
            "trigger": "alertText()",
            "contents": "alertText()"
        }, {
            "trigger": "alertKeys(keys)",
            "contents": "alertKeys(${1:keys}$0)"
        }, {
            "trigger": "acceptAlert()",
            "contents": "acceptAlert()"
        }, {
            "trigger": "dismissAlert()",
            "contents": "dismissAlert()"
        }, {
            "trigger": "moveTo(element,xoffset,yoffset)",
            "contents": "moveTo(${1:element},${2:xoffset},${3:yoffset}$0)"
        }, {
            "trigger": "moveTo(xoffset,yoffset)",
            "contents": "moveTo(${1:xoffset},${2:yoffset}$0)"
        }, {
            "trigger": "click(button)",
            "contents": "click(${1:button}$0)"
        }, {
            "trigger": "buttonDown(button)",
            "contents": "buttonDown(${1:button}$0)"
        }, {
            "trigger": "buttonUp(button)",
            "contents": "buttonUp(${1:button}$0)"
        }, {
            "trigger": "doubleclick()",
            "contents": "doubleclick()"
        }, {
            "trigger": "doubleClick()",
            "contents": "doubleClick()"
        }, {
            "trigger": "tap(element)",
            "contents": "tap(${1:element}$0)"
        }, {
            "trigger": "tap()",
            "contents": "tap()"
        }, {
            "trigger": "flick(xSpeed,ySpeed,swipe)",
            "contents": "flick(${1:xSpeed},${2:ySpeed},${3:swipe}$0)"
        }, {
            "trigger": "flick(element,xoffset,yoffset,speed)",
            "contents": "flick(${1:element},${2:xoffset},${3:yoffset},${4:speed}$0)"
        }, {
            "trigger": "flick(xoffset,yoffset,speed)",
            "contents": "flick(${1:xoffset},${2:yoffset},${3:speed}$0)"
        }, {
            "trigger": "getGeoLocation()",
            "contents": "getGeoLocation()"
        }, {
            "trigger": "setGeoLocation(lat,lon,alt)",
            "contents": "setGeoLocation(${1:lat},${2:lon},${3:alt}$0)"
        }, {
            "trigger": "setLocalStorageKey(key,value)",
            "contents": "setLocalStorageKey(${1:key},${2:value}$0)"
        }, {
            "trigger": "clearLocalStorage()",
            "contents": "clearLocalStorage()"
        }, {
            "trigger": "getLocalStorageKey(key)",
            "contents": "getLocalStorageKey(${1:key}$0)"
        }, {
            "trigger": "removeLocalStorageKey(key)",
            "contents": "removeLocalStorageKey(${1:key}$0)"
        }, {
            "trigger": "scroll(xOffset,yOffset)",
            "contents": "scroll(${1:xOffset},${2:yOffset}$0)"
        }, {
            "trigger": "log(logType)",
            "contents": "log(${1:logType}$0)"
        }, {
            "trigger": "logTypes()",
            "contents": "logTypes()"
        }, {
            "trigger": "currentContext()",
            "contents": "currentContext()"
        }, {
            "trigger": "context(contextRef)",
            "contents": "context(${1:contextRef}$0)"
        }, {
            "trigger": "contexts()",
            "contents": "contexts()"
        }, {
            "trigger": "performTouchAction(touchAction)",
            "contents": "performTouchAction(${1:touchAction}$0)"
        }, {
            "trigger": "performMultiAction(element,multiAction)",
            "contents": "performMultiAction(${1:element},${2:multiAction}$0)"
        }, {
            "trigger": "performMultiAction(multiAction)",
            "contents": "performMultiAction(${1:multiAction}$0)"
        }, {
            "trigger": "performMultiAction(actions)",
            "contents": "performMultiAction(${1:actions}$0)"
        }, {
            "trigger": "shakeDevice()",
            "contents": "shakeDevice()"
        }, {
            "trigger": "shake()",
            "contents": "shake()"
        }, {
            "trigger": "lockDevice(seconds)",
            "contents": "lockDevice(${1:seconds}$0)"
        }, {
            "trigger": "lock(seconds)",
            "contents": "lock(${1:seconds}$0)"
        }, {
            "trigger": "unlockDevice()",
            "contents": "unlockDevice()"
        }, {
            "trigger": "unlock()",
            "contents": "unlock()"
        }, {
            "trigger": "deviceKeyEvent(keycode,metastate)",
            "contents": "deviceKeyEvent(${1:keycode},${2:metastate}$0)"
        }, {
            "trigger": "pressDeviceKey(keycode,metastate)",
            "contents": "pressDeviceKey(${1:keycode},${2:metastate}$0)"
        }, {
            "trigger": "rotateDevice(element,opts)",
            "contents": "rotateDevice(${1:element},${2:opts}$0)"
        }, {
            "trigger": "rotateDevice(opts)",
            "contents": "rotateDevice(${1:opts}$0)"
        }, {
            "trigger": "rotate(element,opts)",
            "contents": "rotate(${1:element},${2:opts}$0)"
        }, {
            "trigger": "rotate(opts)",
            "contents": "rotate(${1:opts}$0)"
        }, {
            "trigger": "getCurrentDeviceActivity()",
            "contents": "getCurrentDeviceActivity()"
        }, {
            "trigger": "getCurrentActivity()",
            "contents": "getCurrentActivity()"
        }, {
            "trigger": "installAppOnDevice(appPath)",
            "contents": "installAppOnDevice(${1:appPath}$0)"
        }, {
            "trigger": "installApp(appPath)",
            "contents": "installApp(${1:appPath}$0)"
        }, {
            "trigger": "removeAppFromDevice(appId)",
            "contents": "removeAppFromDevice(${1:appId}$0)"
        }, {
            "trigger": "removeApp(appId)",
            "contents": "removeApp(${1:appId}$0)"
        }, {
            "trigger": "isAppInstalledOnDevice(bundleId)",
            "contents": "isAppInstalledOnDevice(${1:bundleId}$0)"
        }, {
            "trigger": "isAppInstalled(bundleId)",
            "contents": "isAppInstalled(${1:bundleId}$0)"
        }, {
            "trigger": "pushFileToDevice(pathOnDevice,base64Data)",
            "contents": "pushFileToDevice(${1:pathOnDevice},${2:base64Data}$0)"
        }, {
            "trigger": "pushFile(pathOnDevice,base64Data)",
            "contents": "pushFile(${1:pathOnDevice},${2:base64Data}$0)"
        }, {
            "trigger": "pullFileFromDevice(pathOnDevice)",
            "contents": "pullFileFromDevice(${1:pathOnDevice}$0)"
        }, {
            "trigger": "pullFile(pathOnDevice)",
            "contents": "pullFile(${1:pathOnDevice}$0)"
        }, {
            "trigger": "pullFolderFromDevice(pathOnDevice)",
            "contents": "pullFolderFromDevice(${1:pathOnDevice}$0)"
        }, {
            "trigger": "pullFolder(pathOnDevice)",
            "contents": "pullFolder(${1:pathOnDevice}$0)"
        }, {
            "trigger": "toggleAirplaneModeOnDevice()",
            "contents": "toggleAirplaneModeOnDevice()"
        }, {
            "trigger": "toggleAirplaneMode()",
            "contents": "toggleAirplaneMode()"
        }, {
            "trigger": "toggleFlightMode()",
            "contents": "toggleFlightMode()"
        }, {
            "trigger": "toggleWiFiOnDevice()",
            "contents": "toggleWiFiOnDevice()"
        }, {
            "trigger": "toggleWiFi()",
            "contents": "toggleWiFi()"
        }, {
            "trigger": "toggleLocationServicesOnDevice()",
            "contents": "toggleLocationServicesOnDevice()"
        }, {
            "trigger": "toggleLocationServices()",
            "contents": "toggleLocationServices()"
        }, {
            "trigger": "toggleDataOnDevice()",
            "contents": "toggleDataOnDevice()"
        }, {
            "trigger": "toggleData()",
            "contents": "toggleData()"
        }, {
            "trigger": "startActivity(options)",
            "contents": "startActivity(${1:options}$0)"
        }, {
            "trigger": "launchApp()",
            "contents": "launchApp()"
        }, {
            "trigger": "closeApp()",
            "contents": "closeApp()"
        }, {
            "trigger": "resetApp()",
            "contents": "resetApp()"
        }, {
            "trigger": "backgroundApp(seconds)",
            "contents": "backgroundApp(${1:seconds}$0)"
        }, {
            "trigger": "endTestCoverageForApp(intentToBroadcast,pathOnDevice)",
            "contents": "endTestCoverageForApp(${1:intentToBroadcast},${2:pathOnDevice}$0)"
        }, {
            "trigger": "endTestCoverage(intentToBroadcast,pathOnDevice)",
            "contents": "endTestCoverage(${1:intentToBroadcast},${2:pathOnDevice}$0)"
        }, {
            "trigger": "endCoverage(intentToBroadcast,pathOnDevice)",
            "contents": "endCoverage(${1:intentToBroadcast},${2:pathOnDevice}$0)"
        }, {
            "trigger": "complexFindInApp(selector)",
            "contents": "complexFindInApp(${1:selector}$0)"
        }, {
            "trigger": "complexFind(selector)",
            "contents": "complexFind(${1:selector}$0)"
        }, {
            "trigger": "getAppStrings()",
            "contents": "getAppStrings()"
        }, {
            "trigger": "setImmediateValueInApp(element,value)",
            "contents": "setImmediateValueInApp(${1:element},${2:value}$0)"
        }, {
            "trigger": "setImmediateValue(element,value)",
            "contents": "setImmediateValue(${1:element},${2:value}$0)"
        }, {
            "trigger": "setImmediateValueInApp(value)",
            "contents": "setImmediateValueInApp(${1:value}$0)"
        }, {
            "trigger": "setImmediateValue(value)",
            "contents": "setImmediateValue(${1:value}$0)"
        }, {
            "trigger": "getNetworkConnection()",
            "contents": "getNetworkConnection()"
        }, {
            "trigger": "setNetworkConnection(type)",
            "contents": "setNetworkConnection(${1:type}$0)"
        }, {
            "trigger": "hideKeyboard()",
            "contents": "hideKeyboard()"
        }, {
            "trigger": "hideKeyboard(keyName)",
            "contents": "hideKeyboard(${1:keyName}$0)"
        }, {
            "trigger": "hideKeyboard(strategy:,'pressKey',key:'<key>')",
            "contents": "hideKeyboard(${1:strategy:},${2:'pressKey'},${3:key:'<key>'}$0)"
        }, {
            "trigger": "hideKeyboard(strategy:,'tapOutside')",
            "contents": "hideKeyboard(${1:strategy:},${2:'tapOutside'}$0)"
        }, {
            "trigger": "openNotifications()",
            "contents": "openNotifications()"
        }, {
            "trigger": "attach(sessionID)",
            "contents": "attach(${1:sessionID}$0)"
        }, {
            "trigger": "detach()",
            "contents": "detach()"
        }, {
            "trigger": "getSessionId()",
            "contents": "getSessionId()"
        }, {
            "trigger": "newWindow(url,name)",
            "contents": "newWindow(${1:url},${2:name}$0)"
        }, {
            "trigger": "newWindow(url)",
            "contents": "newWindow(${1:url}$0)"
        }, {
            "trigger": "windowName()",
            "contents": "windowName()"
        }, {
            "trigger": "waitFor(assert,timeout,pollFreq)",
            "contents": "waitFor(function(element){${1:assert}},${2:timeout},${3:pollFreq}$0)"
        }, {
            "trigger": "waitFor(opts)",
            "contents": "waitFor(${1:opts}$0)"
        }, {
            "trigger": "waitForElement(using,value,assert,timeout,pollFreq)",
            "contents": "waitForElement(${1:using},${2:value},function(element){${3:assert}},${4:timeout},${5:pollFreq}$0)"
        }, {
            "trigger": "waitForElement(using,value,timeout,pollFreq)",
            "contents": "waitForElement(${1:using},${2:value},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElement(using,value,opts)",
            "contents": "waitForElement(${1:using},${2:value},${3:opts}$0)"
        }, {
            "trigger": "waitForElements(using,value,assert,timeout,pollFreq)",
            "contents": "waitForElements(${1:using},${2:value},function(element){${3:assert}},${4:timeout},${5:pollFreq}$0)"
        }, {
            "trigger": "waitForElements(using,value,timeout,pollFreq)",
            "contents": "waitForElements(${1:using},${2:value},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElements(using,value,opts)",
            "contents": "waitForElements(${1:using},${2:value},${3:opts}$0)"
        }, {
            "trigger": "saveScreenshot(path)",
            "contents": "saveScreenshot(${1:path}$0)"
        }, {
            "trigger": "waitForElementByClassName(value,assert,timeout,pollFreq)",
            "contents": "waitForElementByClassName(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementByCssSelector(value,assert,timeout,pollFreq)",
            "contents": "waitForElementByCssSelector(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementById(value,assert,timeout,pollFreq)",
            "contents": "waitForElementById(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementByName(value,assert,timeout,pollFreq)",
            "contents": "waitForElementByName(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementByLinkText(value,assert,timeout,pollFreq)",
            "contents": "waitForElementByLinkText(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementByPartialLinkText(value,assert,timeout,pollFreq)",
            "contents": "waitForElementByPartialLinkText(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementByTagName(value,assert,timeout,pollFreq)",
            "contents": "waitForElementByTagName(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementByXPath(value,assert,timeout,pollFreq)",
            "contents": "waitForElementByXPath(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementByCss(value,assert,timeout,pollFreq)",
            "contents": "waitForElementByCss(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementByIosUIAutomation(value,assert,timeout,pollFreq)",
            "contents": "waitForElementByIosUIAutomation(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementByAndroidUIAutomator(value,assert,timeout,pollFreq)",
            "contents": "waitForElementByAndroidUIAutomator(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementByAccessibilityId(value,assert,timeout,pollFreq)",
            "contents": "waitForElementByAccessibilityId(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementsByClassName(value,assert,timeout,pollFreq)",
            "contents": "waitForElementsByClassName(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementsByCssSelector(value,assert,timeout,pollFreq)",
            "contents": "waitForElementsByCssSelector(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementsById(value,assert,timeout,pollFreq)",
            "contents": "waitForElementsById(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementsByName(value,assert,timeout,pollFreq)",
            "contents": "waitForElementsByName(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementsByLinkText(value,assert,timeout,pollFreq)",
            "contents": "waitForElementsByLinkText(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementsByPartialLinkText(value,assert,timeout,pollFreq)",
            "contents": "waitForElementsByPartialLinkText(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementsByTagName(value,assert,timeout,pollFreq)",
            "contents": "waitForElementsByTagName(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementsByXPath(value,assert,timeout,pollFreq)",
            "contents": "waitForElementsByXPath(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementsByCss(value,assert,timeout,pollFreq)",
            "contents": "waitForElementsByCss(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementsByIosUIAutomation(value,assert,timeout,pollFreq)",
            "contents": "waitForElementsByIosUIAutomation(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementsByAndroidUIAutomator(value,assert,timeout,pollFreq)",
            "contents": "waitForElementsByAndroidUIAutomator(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "waitForElementsByAccessibilityId(value,assert,timeout,pollFreq)",
            "contents": "waitForElementsByAccessibilityId(${1:value},function(element){${2:assert}},${3:timeout},${4:pollFreq}$0)"
        }, {
            "trigger": "getPageIndex(element)",
            "contents": "getPageIndex(${1:element}$0)"
        }, {
            "trigger": "uploadFile(filepath)",
            "contents": "uploadFile(${1:filepath}$0)"
        }, {
            "trigger": "waitForConditionInBrowser(conditionExpr,timeout,pollFreq)",
            "contents": "waitForConditionInBrowser(${1:conditionExpr},${2:timeout},${3:pollFreq}$0)"
        }, {
            "trigger": "sauceJobUpdate(jsonData)",
            "contents": "sauceJobUpdate(${1:jsonData}$0)"
        }, {
            "trigger": "sauceJobStatus(hasPassed)",
            "contents": "sauceJobStatus(${1:hasPassed}$0)"
        }, {
            "trigger": "sleep(ms)",
            "contents": "sleep(${1:ms}$0)"
        }, {
            "trigger": "noop()",
            "contents": "noop()"
        }, {
            "trigger": "sendKeys(keys)",
            "contents": "sendKeys(${1:keys}$0)"
        }, {
            "trigger": "setText(keys)",
            "contents": "setText(${1:keys}$0)"
        }, {
            "trigger": "isVisible()",
            "contents": "isVisible()"
        }, {
            "trigger": "asserts.nonEmptyText",
            "contents": "asserts.nonEmptyText"
        }, {
            "trigger": "asserts.textInclude(content),->,Asserter",
            "contents": "asserts.textInclude(content),->,Asserter"
        }, {
            "trigger": "asserts.isVisible",
            "contents": "asserts.isVisible"
        }, {
            "trigger": "asserts.isHidden",
            "contents": "asserts.isHidden"
        }, {
            "trigger": "asserts.jsCondition(jsConditionExpr),->,Asserter",
            "contents": "asserts.jsCondition(jsConditionExpr),->,Asserter"
        }, {
            "trigger": "configureHttp(opts)",
            "contents": "configureHttp(${1:opts}$0)"
        }, {
            "trigger": "showHideDeprecation(boolean)",
            "contents": "showHideDeprecation(${1:boolean}$0)"
        }, {
            "trigger": "addAsyncMethod(name,func)",
            "contents": "addAsyncMethod(${1:name},${2:func}$0)"
        }, {
            "trigger": "addElementAsyncMethod(name,func)",
            "contents": "addElementAsyncMethod(${1:name},${2:func}$0)"
        }, {
            "trigger": "addPromiseMethod(name,func)",
            "contents": "addPromiseMethod(${1:name},${2:func}$0)"
        }, {
            "trigger": "addElementPromiseMethod(name,func)",
            "contents": "addElementPromiseMethod(${1:name},${2:func}$0)"
        }, {
            "trigger": "addPromiseChainMethod(name,func)",
            "contents": "addPromiseChainMethod(${1:name},${2:func}$0)"
        }, {
            "trigger": "addElementPromiseChainMethod(name,func)",
            "contents": "addElementPromiseChainMethod(${1:name},${2:func}$0)"
        }, {
            "trigger": "removeMethod(name,func)",
            "contents": "removeMethod(${1:name},${2:func}$0)"
        }, {
            "trigger": "isLocked()",
            "contents": "isLocked()"
        }, {
            "trigger": "settings()",
            "contents": "settings()"
        }, {
            "trigger": "updateSettings(settingsObject)",
            "contents": "updateSettings(${1:settingsObject}$0)"
        }

    ]
}
